/******************************************************************
 *
 * Copyright 2016 Samsung Electronics All Rights Reserved.
 *
 *
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 ******************************************************************/

apply from: "../../../../build/android/build.gradle"
project.buildDir = "${binDirectory}/es"
def esAARFileDir = "${iotivity_root}/service/easy-setup/mediator/richsdk/android/EasySetupCore/build/outputs/aar"
def esAARFile = "EasySetupCore-release"
def baseAARFile="iotivity-base-release"
def esSoFileDir = "/home/sk/gittest/oictest_repo/IotivityOrgSource/target/iotivity/service/easy-setup/mediator/richsdk/android/EasySetupCore/src/main/libs/armeabi"


buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.5.0'
    }
}

repositories {
        flatDir{
                dirs "${iotivityBaseAARFileDir}", "${esAARFileDir}"
        }
}

apply plugin: 'com.android.application'

android {
    compileSdkVersion  21
    buildToolsVersion "21.1.2"

    sourceSets {

        main {
              manifest.srcFile 'AndroidManifest.xml'
              java.srcDirs 'src'
             // jniLibs.srcDir "${esSoFileDir}"
              jni.srcDirs = [] //disable automatic ndk-build
              assets.srcDirs = ['./assets']
        }
    }

    lintOptions {
          abortOnError false
     }

    defaultConfig {
      applicationId "org.iotivity.test.es.tc"
      minSdkVersion 21
      targetSdkVersion 21
      resValue 'string', 'app_name', 'EasySetupTest'
    }
}

/*
android.applicationVariants.all{ variant ->
       variant.outputs.each { output ->
         output.processResources.manifestFile = file('AndroidManifest.xml')
         output.processManifest.enabled=false
       }
}
*/

dependencies {
    compile fileTree(dir: "${javaExtLibDir}", include: ['*.jar'])
    compile(name:"${baseAARFile}", ext:'aar')
    compile(name:"${esAARFile}", ext:'aar')
}

task esbuild (dependsOn:['deleteBuildDirectory', 'installDebug']) << {
   println ("\n############# Finished commonText #############\n")
}

task deleteBuildDirectory(type: Delete) {
    delete project.buildDir
}

