'''
/******************************************************************
*
* Copyright 2016 Samsung Electronics All Rights Reserved.
*
*
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*
******************************************************************/
'''

print '\n---------------Started Building IotivitySecTest for Tizen---------------\n'

env = Environment(CC='g++')

test = ARGUMENTS.get('TEST')

iotivity_root = 'iotivity'
iotivity_test_root = 'test'

iotivity_include_paths = [
    iotivity_root + '/resource/include',
    iotivity_root + '/resource/csdk/include',
    iotivity_root + '/resource/c_common',
    iotivity_root + '/resource/csdk/stack/include',
    iotivity_root + '/resource/csdk/ocsocket/include',
    iotivity_root + '/resource/csdk/ocrandom/include',
    iotivity_root + '/resource/oc_logger/include',
    iotivity_root + '/resource/csdk/resource-directory/include',
    iotivity_root + '/extlibs/cereal/include',
    iotivity_root + '/extlibs/timer',
    iotivity_root + '/extlibs/timer/',
    iotivity_root + '/resource/c_common/oic_malloc/include',
    iotivity_root + '/resource/c_common/oic_string/include',
    iotivity_root + '/resource/csdk/logger/include',
    iotivity_root + '/extlibs/tinycbor/tinycbor/src',
    iotivity_root + '/extlibs/timer/',
    iotivity_root + '/service/easy-setup/enrollee/inc',
    iotivity_root + '/resource/csdk/logger/include/experimental',
    iotivity_root + '/service/easy-setup/inc',
    '/usr/include/dlog'
]

tc_include_paths = [
    iotivity_test_root + '/include',
    iotivity_test_root + '/src/tc/es/gtest/include/enrollee',
    iotivity_test_root + '/extlibs/gtest-1.7.0/include'
]

cppflags = Split('-s -pthread -std=gnu++0x -pthread -Wall -DTIZEN -fpermissive -D__TIZEN__ -finstrument-functions')

libs = Split('boost_system boost_filesystem boost_thread dl expat oc octbstack oc_logger connectivity_abstraction pthread libglib-2.0 dlog ESEnrolleeSDK')

es_tc_src = [
    iotivity_test_root + '/src/common/testcase/gtest/IotivitySECTestMain.cpp', 
    iotivity_test_root + '/src/common/commonutil/c_cpp/CommonUtil.cpp', 
    iotivity_test_root + '/src/common/commonutil/c_cpp/CommonTestUtil.cpp', 
    Glob(iotivity_test_root + '/src/tc/es/gtest/src/helper/enrollee/*.cpp'), 
    Glob(iotivity_test_root + '/src/tc/es/gtest/src/btc/enrollee/*.cpp'),
    Glob(iotivity_test_root + '/src/tc/es/gtest/src/stc/enrollee/*.cpp')
]

es_simulator_src = [
    iotivity_test_root + '/src/testapp/TcpClientApp/tcpclient.cpp', 
    iotivity_test_root + '/src/common/commonutil/c_cpp/Configuration.cpp'
]

if 'tc' in test:
    env.Program(source = es_tc_src, 
                target = 'iotivity_es_test', 
                CPPPATH = iotivity_include_paths + tc_include_paths, 
                LIBS = libs + ['gtest'], 
                LIBPATH = [iotivity_test_root + '/extlibs/gtest-1.7.0/bin/tizen'], 
                CPPFLAGS = cppflags)

if 'simulator' in test:
    env.Program(source = es_simulator_src, 
                target = 'iotivity_es_tcp_client', 
                CPPPATH = tc_include_paths + [ '/usr/include/dlog' ],
                LIBS = libs,
                CPPFLAGS = cppflags)
